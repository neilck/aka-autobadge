import styles from "../page.module.css";
import { token } from "../serverActions/akaActions";
import { AwardButton } from "./AwardButton";

export default async function Simple({
  params,
  searchParams,
}: {
  params: { slug: string };
  searchParams: { [key: string]: string | string[] | undefined };
}) {
  let code = searchParams["code"];
  let redirect = searchParams["redirect"];
  let isValidSession = false;
  let tokenValue = "";
  let configParams = {};

  const load = async () => {
    if (code == "") {
      console.log("code parameter missing in url");
      isValidSession = false;
      return;
    }

    console.log(`About to exchange code ${code} for a token...`);
    try {
      isValidSession = false;
      // exchange code for JSON web token
      // only valid session codes issued by AKA Profiles will return a token
      const result = await token(code as string);

      if (result.error == "missing or invalid parameter") {
        console.log(`Unable to get token using invalid code ${code}`);
        console.log(
          `Valid codes are generated by akaprofiles on redirect, and can expire`
        );
        return;
      }

      if (result.token != undefined && result.payload != undefined) {
        console.log(`Received token ${result.token.substring(0, 20) + "..."}`);
        console.log("Payload:");
        console.log(result.payload);
        isValidSession = true;
        tokenValue = result.token;
        configParams = result.payload.configParams;
      }
    } catch (error) {
      const myError = error as Error;
      console.log(`ERROR: ${myError.message}`);
    }
  };

  await load();

  return (
    <div className={styles.main}>
      <div className={styles.section}>
        This a simple badge award page for an an AKA Profiles auto badge.
      </div>
      <AwardButton token={tokenValue} disabled={!isValidSession} />
      <div className={styles.section}>
        <p>
          <b>URL Parameters</b>
        </p>
        <ul>
          <li key="code">
            <b>code </b>
            {code}
          </li>
          <li key="redirect">
            <b>redirect </b>
            {redirect}
          </li>
        </ul>
      </div>
      <div className={styles.section}>
        <p>
          <b>Session</b>
        </p>
        <ul>
          <li key="isValid">
            <b>valid session </b>
            {isValidSession.toString()}
          </li>
          <li key="token">
            <b>token </b>
            {tokenValue}
          </li>
          <li key="configParams">
            <b>configParams </b>
            {JSON.stringify(configParams)}
          </li>
        </ul>
      </div>
    </div>
  );
}
